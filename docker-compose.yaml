version: '3.8'

services:
  consumer-backend:
    build:
      context: ./Metrics consumer
      dockerfile: Dockerfile
    restart: on-failure
    container_name: consumer-backend
    ports:
      - "8082:8082"
    depends_on:
      - consumer_pg
    environment:
      - SERVER_PORT= 8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://consumer_pg/consumer_db
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092 
    networks:
      - backend-network
      
  producer-backend:
    build:
      context: ./Metrics producer
      dockerfile: Dockerfile
    restart: on-failure
    container_name: producer-backend
    ports:
      - "8081:8081"
    depends_on:
      - producer_pg
    environment:
      - SERVER_PORT= 8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://producer_pg/producer_db
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092 
    networks:
      - backend-network
      
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - backend-network
      
  kafka:
    image: confluentinc/cp-kafka:6.2.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend-network 
      
  consumer_pg:
    image: postgres:16-alpine
    container_name: consumer_pg
    ports:
      - "54320:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: consumer_db
    networks:
      - backend-network
      
  producer_pg:
    image: postgres:16-alpine
    container_name: producer_pg
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: producer_db
    volumes:
      - db_storage:/var/lib/postgresql/data
    networks:
      - backend-network
      
volumes:
  db_storage:
networks:
  backend-network:
    driver: bridge